sort Method  = struct method1 | method2 | method3 | method4;
act method_var_begin,method_var_end:Nat#Method;

act method_call_begin,method_call_end:Nat#Method;
act method_begin,method_end:Nat#Method;

proc method1(id:Nat) = (
		      method_var_begin(id,method1).
			  method_call_begin(id,method4).
			  method_call_end(id,method4).
			method_var_end(id,method1) 
			)
;

proc method4(id:Nat) =( method_var_begin(id,method4).
		       method_var_end(id,method4)
);


proc P(id:Nat) = ( method_call_begin(id,method1).
		 method_call_end(id,method1)
		);

proc ProcP(id:Nat) = P(id) || method1(id) ||  method4(id); 

init 
  allow({method_begin,method_end,method_begin|method_end,method_begin|method_begin,method_end|method_end
  ,method_begin|method_begin|method_begin,method_begin|method_end|method_begin, method_end|method_end|method_begin,
  method_end|method_end|method_end
% 
%   ,method_begin|method_begin|method_begin|method_begin,method_begin|method_begin|method_begin|method_end,
%   method_begin|method_begin|method_end|method_end,
%   method_begin|method_end|method_end|method_end,
%   method_end|method_end|method_end|method_end
%   
%   action3|action3,action2|action2,action3|action2,action2,action3, method_begin|action2,method_begin|action3,
%   method_end|action2,method_end|action3 % <-dont want to keep track of all combinations
  block({method_var_begin,method_var_end,method_call_begin,method_call_end % <-- cannot linearize
},
comm({
method_call_begin|method_var_begin->
method_begin,
method_call_end|method_var_end->
method_end
}, 
	ProcP(1) ||  ProcP(2) % || ProcP(3) 
));
